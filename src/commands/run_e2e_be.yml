description: >
  This command echos "Hello World" using file inclusion.
# What will this command do?
# Descriptions should be short, simple, and clear.
parameters:
  tags:
    type: string
    description: Cucumber test tags
    default: ""
  be_url:
    type: string
    description: The backend URL for testing
    default: ""
  project:
    type: string
    description: Lagoon project name
    default: ""
  browser:
    type: string
    description: Browser, default to headless Chrome. If it's set to any other browser, BrowserStack user key will be required.
    default: "chrome_headless"
  retry:
    type: integer
    description: Cucumber-js retry option
    default: 2
steps:
  - browser-tools/install-chrome:
      chrome-version: 111.0.5563.64
  - run:
      name: Check browsers
      command: |
        node --version
        google-chrome --version
  - run:
      name: Set up Environment variables
      command: |
          echo 'export BE_BASE_URL="<< parameters.be_url >>"' >> $BASH_ENV
          echo 'export PROJECT="<< parameters.project >>"' >> $BASH_ENV
          if [ "chrome_headless" != "<< parameters.browser >>" ]; then echo 'export BROWSERSTACK="true"' >> $BASH_ENV; fi
  - run:
      name: Check test environment urls
      command: |
        echo $BE_BASE_URL
        echo $PROJECT
        echo $BROWSERSTACK
  - run:
      name: "Wait up servers in case they are idle"
      command: |
        curl ${BE_BASE_URL} -s -S --max-time 1000 --write-out '%{http_code}' --output /dev/null;
  - restore_cache:
      keys:
        - v1-e2e-deps-{{ checksum "package-lock.json" }}
        - v1-e2e-deps-{{ .Branch }}
        - v1-e2e-deps
  - run:
      name: install node modules
      command: npm ci
  - save_cache:
      key: v1-e2e-deps-{{ checksum "package-lock.json" }}
      paths:
        - node_modules
  - run:
      name: Run Backend tests
      command: NIGHTWATCH_ENV=<< parameters.browser >> npm run cucumber:backend -- --tags "<< parameters.tags >>" --retry << parameters.retry >>
  - store_test_results:
      path: report/junit.xml
  - store_artifacts:
      path: report
